version: "3.8"

services:
  bite-backend:
    image: mmarvinken/bite-backend:latest
    env_file:
      - ./.env
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 0s
        order: start-first
        failure_action: rollback
        monitor: 60s
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 2G
        reservations:
          cpus: "0.2"
          memory: 512M
      placement:
        constraints:
          - node.role == manager
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

    networks:
      - app-network
    ports:
      - "5000:5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.bitcoinhighschool.com`)"

  traefik:
    image: traefik:v3.4
    command:
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--providers.swarm.exposedByDefault=false"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.swarm.watch=true" # Enable watching for changes
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entryPoints.web.forwardedHeaders.insecure=true"
      - "--entryPoints.websecure.forwardedHeaders.insecure=true"
        # Entrypoints Timeout Configurations
      - "--entrypoints.websecure.transport.respondingTimeouts.readTimeout=300s"
      - "--entrypoints.websecure.transport.respondingTimeouts.writeTimeout=300s"
      - "--entrypoints.websecure.transport.respondingTimeouts.idleTimeout=300s"
      - "--entrypoints.web.transport.respondingTimeouts.readTimeout=300s"
      - "--entrypoints.web.transport.respondingTimeouts.writeTimeout=300s"
      - "--entrypoints.web.transport.respondingTimeouts.idleTimeout=300s"
        #  Global Timeout Settings
      - "--serversTransport.forwardingTimeouts.dialTimeout=30s"
      - "--serversTransport.forwardingTimeouts.responseHeaderTimeout=60s"
      - "--serversTransport.forwardingTimeouts.idleConnTimeout=90s"
      - "--tcpServersTransport.dialTimeout=60s"
        #  SSL Certificate Configurations
      - "--entrypoints.websecure.http.tls.certresolver=letsencrypt"
      - "--certificatesresolvers.letsencrypt.acme.email=m71109204@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--log.level=DEBUG"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 640M
        reservations:
          memory: 128M
      placement:
        constraints:
          - node.role == manager
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.bitcoinhighschool.com`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      # Expose Prometheus metrics endpoint
      - "traefik.http.routers.metrics.rule=Host(`traefik.bitcoinhighschool.com`) && PathPrefix(`/metrics`)"
      - "traefik.http.routers.metrics.service=prometheus@internal"
      - "traefik.http.routers.metrics.entrypoints=websecure"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/letsencrypt
    networks:
      - app-network

  grafana:
    image: mmarvinken/bite-grafana:latest
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 512M
        reservations:
          memory: 128M
      placement:
        constraints:
          - node.role == manager
    networks:
      - app-network
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.bitcoinhighschool.com`)"

  prometheus:
    image: mmarvinken/bite-prometheus:latest
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 512M
        reservations:
          memory: 128M
      placement:
        constraints:
          - node.role == manager
    networks:
      - app-network
    ports:
      - "9090:9090"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.bitcoinhighschool.com`)"

networks:
  app-network:
    driver: overlay

volumes:
  traefik-data: # Named volume for persistent certificate storage
